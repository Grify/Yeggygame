function init(self)
	initialv4 = vmath.vector4(0.6,0.6,0.6,1)
	
	scene_fgcolor = vmath.vector4(1,1,1,1)
	self.isAnimating = false
	self.increment = 0.01
	fgcolorthreshold = 0.3
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	--pprint(scene_fgcolor)
	if self.isAnimating and scene_fgcolor.x > fgcolorthreshold then
		sprite.set_constant("#sprite", "tint", scene_fgcolor)
		scene_fgcolor.x = scene_fgcolor.x - (self.increment * dt)
		scene_fgcolor.y = scene_fgcolor.y - (self.increment * dt)
		scene_fgcolor.z = scene_fgcolor.z - (self.increment * dt)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start") then
		self.isAnimating = true
		
		--scene_fgcolor = initialv4
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		--msg.post("/scene", "disable")
		--sprite.set_constant("#sprite", "tint", vmath.vector4(1,1,1,1))
	end
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
